show databases;
use bha

## Question 1
## HOW MANY BURGERS WERE ORDERED ?
SELECT COUNT(*) AS ORDER_NUM FROM RUNNER_ORDERS;

## Question 2
## HOW MANY UNIQUE CUSTOMER ORDERS WERE MADE ?
SELECT COUNT(DISTINCT ORDER_ID) AS UNIQUE_CUSTOMER_ORDERS  FROM CUSTOMER_ORDERS;

## Question 3
## HOW MANY SUCCESSFUL ORDERS WERE DELIVERED BY EACH RUNNER ?
SELECT RUNNER_ID,COUNT(DISTINCT(ORDER_ID))AS SUCCESSFUL_ORDERS FROM RUNNER_ORDERS 
WHERE CANCELLATION IS NULL GROUP BY RUNNER_ID ORDER BY SUCCESSFUL_ORDERS DESC;

## Question 4
## HOW MANY OF EACH TYPE OF BURGER WAS DELIVERED ?
SELECT B.BURGER_NAME,
COUNT(B.BURGER_ID) AS DELIVERED_BURGER_COUNT 
FROM CUSTOMER_ORDERS C JOIN RUNNER_ORDERS R ON
C.ORDER_ID=R.ORDER_ID JOIN BURGER_NAMES B ON C.BURGER_ID=B.BURGER_ID 
WHERE R.DISTANCE!=0 GROUP BY B.BURGER_NAME;

## Question 5
## HOW MANY VEGETARIAN AND MEAT LOVERS WERE ORDERED BY EACH CUSTOMER ?
SELECT C.CUSTOMER_ID,
B.BURGER_NAME,COUNT(B.BURGER_NAME)AS ORDER_COUNT FROM CUSTOMER_ORDERS C 
JOIN BURGER_NAMES B ON C.BURGER_ID=B.BURGER_ID 
GROUP BY C.CUSTOMER_ID,B.BURGER_NAME 
ORDER BY C.CUSTOMER_ID;

## Question 6
## WHAT WAS THE MAXIMUM NUMBER OF BURGERS DELIVERED IN SINGLE ORDER ?
WITH BURGER_COUNT_CTE AS
(
SELECT C.ORDER_ID,
COUNT(C.BURGER_ID) AS BURGER_ORDER
FROM CUSTOMER_ORDERS C JOIN RUNNER_ORDERS R ON C.ORDER_ID=R.ORDER_ID
WHERE R.DISTANCE !=0
GROUP BY C.ORDER_ID
)
SELECT MAX(BURGER_ORDER)AS BURGER_COUNT FROM BURGER_COUNT_CTE;

## Question 7
## FOR EACH CUSTOMER HOW MANY DELIVERED BURGERS HAD ATLEAST ONE CHANGE AND HOW MANY HAD NO CHANGES ?
SELECT C.CUSTOMER_ID,SUM(CASE WHEN C.EXCLUSIONS <> ' ' OR C.EXTRAS <> ' ' THEN 1
ELSE 0
END) AS ATLEAST_ONE_CHANGE,
SUM(CASE WHEN C.EXCLUSIONS=' ' AND C.EXTRAS = ' ' THEN 1
ELSE 0
END) AS NO_CHANGE
FROM CUSTOMER_ORDERS C JOIN RUNNER_ORDERS R ON 
C.ORDER_ID=R.ORDER_ID
WHERE R.DISTANCE !=0
GROUP BY C.CUSTOMER_ID
ORDER BY C.CUSTOMER_ID;

## Question 8
## WHAT WAS THE TOTAL VOLUME OF BURGERS ORDERED FOR EACH HOUR OF THE DAY ?
SELECT EXTRACT(HOUR FROM ORDER_TIME)AS HOURS_OF_DAY,
COUNT(ORDER_ID) AS BURGER_COUNT FROM CUSTOMER_ORDERS
GROUP BY EXTRACT(HOUR FROM ORDER_TIME);

## Question 9
## HOW MANY RUNNERS SIGNED UP FOR EACH ONE WEEK PERIOD ?
SELECT EXTRACT(WEEK FROM REGISTRATION_DATE) AS REGISTRATION_WEEK,
COUNT(RUNNER_ID) AS RUNNER_SIGNUP
FROM BURGER_RUNNER
GROUP BY REGISTRATION_WEEK;

## Question 10
## WHAT WAS THE AVbha_salesbha_membersERAGE DISTANCE TRAVELLED FOR EACH CUSTOMER ?
SELECT C.CUSTOMER_ID,AVG(R.DISTANCE) AS AVG_DISTANCE FROM CUSTOMER_ORDERS C 
JOIN RUNNER_ORDERS R ON C.ORDER_ID=R.ORDER_ID
WHERE DURATION !=0
GROUP BY C.CUSTOMER_ID;